package pipe.gui.widgets.newwidges.view;

import org.jdom.Element;
import pipe.gui.widgets.newwidges.bean.GuideModel;
import pipe.gui.widgets.newwidges.factory.ModelFactory3;
import pipe.gui.widgets.newwidges.bean.VLInfo;

import javax.swing.*;
import java.awt.*;
import java.util.*;

/**
 * Created by hanson on 2017/8/22.
 * 第四步，补全链路的信息
 */
public class ComponentDialogVL extends JDialog {
    /**用来暂时存储所有的链路*/


    private String[] id = new String[100];

    private int[] typeOfMessage = new int[100];

    private String[] remarkOfRT = new String[100];

    private Set<String> idCheckSet = new HashSet<String>();

    private int[] delay = new int[100];

    private int[] bag = new int[100];

    private int[] cache = new int[100];

    private ArrayList<String>[] destin = new ArrayList[100];

    private int[] packageSize = new int[100];

    private int num = 1;

    private ArrayList<Element> arr = null;

    /** Creates new form ModelGuideDialog1 */
    public ComponentDialogVL(Frame parent) {
        super(parent);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        setResizable(false);

        for(int i=0; i<num; i++)
        {
            jLabelArray1[i] = new JLabel();
            jTextFieldArray2[i] = new JTextField();
            jComboBoxArray3[i] = new JComboBox();
            jTextFieldArray4[i] = new JTextField();
            jTextFieldArray5[i] = new JTextField();
            jTextFieldArray6[i] = new JTextField();
            jTextFieldArray211[i] = new JTextField();
            jTextFieldArray7[i] = new JTextField();
            jTextFieldArray8[i] = new JTextField();
            //comboBox[i] = new MultiSelectComboBox<String>();
        }
        buttonGroup1 = new ButtonGroup();
        jButton6 = new JButton();
        jPanel1 = new JPanel();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jSeparator1 = new JSeparator();
        jButtonNextStep = new JButton();
        jButton3 = new JButton();
        jButton4 = new JButton();
        jPanel2 = new JPanel();

        jLabel5 = new JLabel();
        jLabel7 = new JLabel();
        jLabel8 = new JLabel();
        jLabel9 = new JLabel();
        jLabe20 = new JLabel();
        jLabe21 = new JLabel();
        jLabe211 = new JLabel();
        jLabe22 = new JLabel();
        jLabe23 = new JLabel();

        jButton6.setText("添加备注");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("虚链路组件");

        jPanel1.setBackground(new Color(255, 255, 255));

        //jLabel1.setText("第四步");

        jLabel2.setText("  补全航电消息参数(如航电消息类型、生成周期)、虚链路参数信息（如虚链路ID、BAG、帧大小）、分区缓存大小及接收端系统");

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
//            jPanel1Layout.setAutoCreateGaps(true);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 770, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 217, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel2))
                                        .addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                                .addContainerGap())
        );

        jButtonNextStep.setText("下一步");
        jButtonNextStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextStepActionPerformed(evt);
            }
        });

        jButton3.setText("取消");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("上一步");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevStepActionPerformed(evt);
            }
        });

        jLabel5.setText("编号");
        jLabel7.setText("VL_ID");
        jLabel8.setText("航电消息类型");
        jLabel9.setText("航电消息生成周期(ms)");
        jLabe20.setText(" BAG(ms)");
        jLabe21.setText("帧大小(Byte)");
        jLabe211.setText("缓存帧的数量(个)");
        jLabe22.setText("  源 ");
        jLabe23.setText("目 的");
        //这块一下把十个都设置好吧  然后 这里4-10的响应函数 没调整呢 注意


        for(int i=0; i<num; i++)
        {
            jLabelArray1[i].setText("   "+(i+1));
            // 	jTextFieldArray2[i].setActionCommand("jTextFieldArray2_"+(i));
            String vlId = "SPM1_Par1_VL0";
            jTextFieldArray2[i].setText(vlId);
            jTextFieldArray2[i].addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    jTextField2_1FocusLost(evt);
                }
            });
            jComboBoxArray3[i].setModel(new DefaultComboBoxModel(new String[] { "周期型", "事件型" }));
            jComboBoxArray3[i].setActionCommand("jComboBoxArray_"+(i));
            jComboBoxArray3[i].addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox3_1ActionPerformed(evt);
                }
            });

            jTextFieldArray4[i].setToolTipText("周期：单位ms");

        }

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2Layout.setAutoCreateGaps(true);
        jPanel2Layout.setAutoCreateContainerGaps(true);
        jPanel2.setLayout(jPanel2Layout);
        GroupLayout.ParallelGroup gp1 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gp1.addComponent(jLabel5);
        for(int i=0; i<num; i++)
        {
            gp1.addComponent(jLabelArray1[i]);
        }

        GroupLayout.ParallelGroup gp2 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gp2.addComponent(jLabel7);
        for(int i=0; i<num; i++)
        {
            gp2.addComponent(jTextFieldArray2[i]);
        }

        GroupLayout.ParallelGroup gp3 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gp3.addComponent(jLabel8);
        for(int i=0; i<num; i++)
        {
            gp3.addComponent(jComboBoxArray3[i]);
        }

        GroupLayout.ParallelGroup gp4 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gp4.addComponent(jLabel9);
        for(int i=0; i<num; i++)
        {
            jTextFieldArray4[i].setText("1");
            gp4.addComponent(jTextFieldArray4[i]);
        }

        GroupLayout.ParallelGroup gpp = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gpp.addComponent(jLabe20);
        for(int i=0; i<num; i++)
        {
            jTextFieldArray5[i].setText("1");
            gpp.addComponent(jTextFieldArray5[i]);
        }

        GroupLayout.ParallelGroup gppp = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gppp.addComponent(jLabe21);
        for(int i=0; i<num; i++)
        {
            jTextFieldArray6[i].setText("1518");
            gppp.addComponent(jTextFieldArray6[i]);
        }

        GroupLayout.ParallelGroup g211 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        g211.addComponent(jLabe211);
        for(int i=0; i<num; i++)
        {
            jTextFieldArray211[i].setText("1");
            g211.addComponent(jTextFieldArray211[i]);
        }
        GroupLayout.ParallelGroup g4p = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        g4p.addComponent(jLabe22);
        for(int i=0; i<num; i++)
        {
            String vlId = "SPM1_Par1_VL0";
            jTextFieldArray7[i].setText(vlId);

            g4p.addComponent(jTextFieldArray7[i]);
        }
        GroupLayout.ParallelGroup g5p = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        g5p.addComponent(jLabe23);
        for(int i=0; i<num; i++)
        {
            g5p.addComponent(jTextFieldArray8[i]);
        }

        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(gp1).addGap(30).addGroup(gp2).addGap(30).addGroup(gp3).addGap(30).addGroup(gp4).addGap(30).addGroup(gpp).addGap(30).addGroup(gppp).addGap(30).addGroup(g211).addGap(30).addGroup(g4p).addGap(30).addGroup(g5p));//.addGap(30).addGroup(gp5));


        GroupLayout.ParallelGroup gp6 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE);
        gp6.addComponent(jLabel5);
        gp6.addComponent(jLabel7);
        gp6.addComponent(jLabel8);
        gp6.addComponent(jLabel9);
        gp6.addComponent(jLabe20);
        gp6.addComponent(jLabe21);
        gp6.addComponent(jLabe211);
        gp6.addComponent(jLabe22);
        gp6.addComponent(jLabe23);


        GroupLayout.SequentialGroup group = jPanel2Layout.createSequentialGroup().addGroup(gp6);

        for(int i=0; i<num; i++)
        {
            GroupLayout.ParallelGroup gpTemp = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE);
            gpTemp.addComponent(jLabelArray1[i]);
            gpTemp.addComponent(jTextFieldArray2[i]);
            gpTemp.addComponent(jComboBoxArray3[i]);
            gpTemp.addComponent(jTextFieldArray4[i]);
            gpTemp.addComponent(jTextFieldArray5[i]);
            //gpTemp.addComponent(jButtonArray5[i]);
            gpTemp.addComponent(jTextFieldArray6[i]);
            gpTemp.addComponent(jTextFieldArray211[i]);
            gpTemp.addComponent(jTextFieldArray7[i]);
            gpTemp.addComponent(jTextFieldArray8[i]);
            group.addGroup(gpTemp);
        }

        jPanel2Layout.setVerticalGroup(group);
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(318, Short.MAX_VALUE)
                                .addComponent(jButton4)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonNextStep)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)
                                .addGap(8, 8, 8))
                        .addComponent(jSeparator1, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton3)
                                        .addComponent(jButtonNextStep)
                                        .addComponent(jButton4)).addContainerGap())
        );

        pack();

    }// </editor-fold>


    private void jTextField2_1FocusLost(java.awt.event.FocusEvent evt) {
        // TODO add your handling code here:
        //    	System.out.println(command+"||||||||||||||||||||");//这里原本想 失去焦点 然后判断是否重复  但是因为不知道这个事件是哪个 textField发出来的 所以作罢

    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        doClose(RET_CANCEL);
    }

    private void jButtonPrevStepActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void jComboBox3_1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String command = evt.getActionCommand();
        //System.out.println("command"+command);
        int comboNumber = Integer.parseInt(command.substring(command.length()-1));
        //System.out.println("comboNumber" + comboNumber);
        if(jComboBoxArray3[comboNumber].getSelectedIndex()==1)
        {
            //System.out.println("jComboBoxArray3[comboNumber].getSelectedIndex():"+jComboBoxArray3[comboNumber].getSelectedIndex());
            typeOfMessage[comboNumber] = GuideModel.EVENT_MESSAGE;
        }
        else if(jComboBoxArray3[comboNumber].getSelectedIndex()==0)
        {
            //System.out.println("11111jComboBoxArray3[comboNumber].getSelectedIndex():"+jComboBoxArray3[comboNumber].getSelectedIndex());
            typeOfMessage[comboNumber] = GuideModel.PERIOD_MESSAGE;
            jTextFieldArray4[comboNumber].setEditable(true);
        }
        if(jComboBoxArray3[comboNumber].getSelectedIndex()==1)
        {
            //System.out.println("22222222222jComboBoxArray3[comboNumber].getSelectedIndex():"+jComboBoxArray3[comboNumber].getSelectedIndex());
            jTextFieldArray4[comboNumber].setText("");
            jTextFieldArray4[comboNumber].setEditable(false);
        }

    }



    private void jButton5_1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        System.out.println("弹出一个小框，然后填写备注");

        String command = evt.getActionCommand();
        int buttonNumber = Integer.parseInt(command.substring(command.length()-1));

        String  remark = JOptionPane.showInputDialog("请输入备注");
        if(remark!=null)
            remarkOfRT[buttonNumber] = remark;
        System.out.println(remark+buttonNumber);

    }

    private void jButtonNextStepActionPerformed(java.awt.event.ActionEvent evt) {//下一步
        // TODO add your handling code here:
        for(int i=0; i<num; i++)
        {
            id[i] = jTextFieldArray2[i].getText().trim();
            if(id[i].equals(""))
            {
                JOptionPane.showMessageDialog(this, "ID不能为空", "Warning",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
            if(this.idCheckSet.contains(id[i]))
            {
                JOptionPane.showMessageDialog(this, "ID不能重复", "Warning",
                        JOptionPane.WARNING_MESSAGE);

                this.idCheckSet.clear();
                return;
            }
            this.idCheckSet.add(id[i]);
        }
        this.idCheckSet.clear();


        for(int i=0; i<num; i++)
        {
            if(!jTextFieldArray4[i].isEditable())//这个说明是 事件消息
                delay[i]=0;
            else
            {
                if(jTextFieldArray4[i].getText().trim().equals(""))
                {
                    JOptionPane.showMessageDialog(this, "周期参数不能为空", "Warning",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }
                /*Pattern pattern = Pattern.compile("[1|2|3|4|5|6][0-2000]*");
                if(!pattern.matcher(jTextFieldArray4[i].getText()).matches())
                {
                    JOptionPane.showMessageDialog(this, "周期参数格式有误，请重新确认", "Warning",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }*/
                delay[i] = Integer.parseInt(jTextFieldArray4[i].getText());

            }
        }

        for(int i=0; i<num; i++)
        {
            if(jTextFieldArray5[i].getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(this, "BAG参数不能为空", "Warning",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
            if(jTextFieldArray211[i].getText().trim().equals(""))
                cache[i]=1;
            else
                cache[i] = Integer.parseInt(jTextFieldArray211[i].getText());
               /* Pattern pattern = Pattern.compile("[1|2|3|4|5|6][0-100]*");
                if(!pattern.matcher(jTextFieldArray5[i].getText()).matches())
                {
                    JOptionPane.showMessageDialog(this, "BAG参数格式有误，请重新确认", "Warning",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }*/
            this.bag[i] = Integer.parseInt(jTextFieldArray5[i].getText());
        }

        for(int i=0; i<num; i++)
        {
            if(jTextFieldArray6[i].getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(this, "帧大小不能为空", "Warning",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
               /* Pattern pattern = Pattern.compile("[1|2|3|4|5|6][0-100]*");
                if(!pattern.matcher(jTextFieldArray5[i].getText()).matches())
                {
                    JOptionPane.showMessageDialog(this, "BAG参数格式有误，请重新确认", "Warning",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }*/
            this.packageSize[i] = Integer.parseInt(jTextFieldArray6[i].getText());

            if(jTextFieldArray8[i].getText().trim().equals(""))
                destin[i] = null;
            else {
                String str = jTextFieldArray8[i].getText().trim();
                String[] s = str.split(",");
                for(int t=0;t<s.length;t++){
                    destin[i].add(s[t]);
                }
            }
        }

        VLInfo info = new VLInfo();//备注暂时先没加
        for(int i=0; i<num; i++)
        {

            info.setVlId("SPM1_Par1_VL0");
            info.setBAG(bag[i]);
            info.setCacheSize(cache[i]);
            info.setTransCycle(delay[i]);
            info.setSource("SPM1_Par1_VL0");
            info.setDestination(destin[i]);

            int size = destin[i].size();
            for(int j=0;j<size;j++){
                System.out.println("Dialog4的j："+j+","+destin[i].get(j));
            }
            info.setPackageSize(packageSize[i]);
            //System.out.println(info.getSource() + info.getDestination());
            if(typeOfMessage[i] == GuideModel.EVENT_MESSAGE)
                info.setPeriodical(false);
            else if(typeOfMessage[i] == GuideModel.PERIOD_MESSAGE)
                info.setPeriodical(true);
        }

        doClose(RET_OK);

        //初始化
        //GuideModel.FLAG = true;
        new ModelFactory3();
        //ModelFactory3.addVL1(info);
        //TODO 验证此时arr的内容是不是变了

       // ModelGuideDialog44 guiDialog =  new ModelGuideDialog44(ApplicationSettings.getApplicationView(), true, this.nowModel,arr);
        //guiDialog.pack();
        //guiDialog.setLocationRelativeTo(null);
        //guiDialog.setVisible(true);
    }
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModelGuideDialog1 dialog = new ModelGuideDialog1(new JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private ButtonGroup buttonGroup1;
    //添加备注button
    //private javax.swing.JButton jButtonArray5[] = new javax.swing.JButton[100];

    private JButton jButtonNextStep;
    private JButton jButton3;
    private JButton jButton4;

    private JButton jButton6;

    private JComboBox jComboBox10;

    //终端消息类型
    private JComboBox[] jComboBoxArray3 = new JComboBox[100];

    //接收端 目的 String
    // private javax.swing.JComboBox[] jComboBoxArray4 = new javax.swing.JComboBox[100];
    //private MultiSelectComboBox<String>[] comboBox = new MultiSelectComboBox[100];

    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel14;
    private JLabel jLabel15;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel5;

    //第一列的编号
    private JLabel[] jLabelArray1 = new JLabel[100];

    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JLabel jLabe20;
    private JLabel jLabe21;
    private JLabel jLabe211;
    private JLabel jLabe22;
    private JLabel jLabe23;
    // private javax.swing.JLabel jLabe24;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JSeparator jSeparator1;

    //第二列 ID
    private JTextField[] jTextFieldArray2 = new JTextField[100];

    //    第四列参数 发生周期
    private JTextField[] jTextFieldArray4 = new JTextField[100];
    //    第五列参数bag
    private JTextField[] jTextFieldArray5 = new JTextField[100];

    //    第6列参数 包大小
    private JTextField[] jTextFieldArray6 = new JTextField[100];
    //    第6.5列参数 缓存
    private JTextField[] jTextFieldArray211 = new JTextField[100];
    //    第7列参数 源
    private JTextField[] jTextFieldArray7 = new JTextField[100];

    //接收端 目的 String
     private JTextField[] jTextFieldArray8 = new JTextField[100];
    //private MultiSelectComboBox<String> comboBox;


    // End of variables declaration
    private int returnStatus = RET_CANCEL;

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
}
