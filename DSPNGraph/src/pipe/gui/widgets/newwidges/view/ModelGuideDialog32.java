package pipe.gui.widgets.newwidges.view;

import pipe.gui.ApplicationSettings;
import pipe.gui.widgets.newwidges.bean.DU;
import pipe.gui.widgets.newwidges.bean.GuideModel;
import pipe.gui.widgets.newwidges.bean.Paratition;
import pipe.gui.widgets.newwidges.bean.SPM;

import javax.swing.*;
import java.util.ArrayList;
import java.util.Queue;

/**
 * Created by hanson on 2017/8/22.
 * 建模向导第六步，每个接收端分区的个数和轮询传输周期
 * TODO 修改显示为分区的ID，根据分区个数显示分区，还有分区的轮询周期
 * 显示所有SPM的所有分区就好
 */

public class ModelGuideDialog32 extends JDialog {
    // Variables declaration - do not modify
    private ButtonGroup buttonGroup1;
    //添加备注button
    //private javax.swing.JButton jButtonArray6[] = new javax.swing.JButton[100];

    private JButton jButtonNextStep;
    private JButton jButton3;
    private JButton jButton4;

    private JButton jButton6;

    private JComboBox jComboBox10;

    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel14;
    private JLabel jLabel15;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel5;

    //第一列的编号
    private JLabel[] jLabelArray1 = new JLabel[100];

    private JLabel jLabel7;
    //private JLabel jLabel8;
    //private javax.swing.JLabel jLabel9;
    //private javax.swing.JLabel jLabe20;
    private JLabel jLabe21;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JSeparator jSeparator1;

    //第二列 ID
    private JTextField[] jTextFieldArray2 = new JTextField[100];

    //第三列 分区中VL数量
    //private JTextField[] jTextFieldArray3 = new JTextField[100];


    //第6列  轮训周期
    private JTextField[] jTextFieldArray6 = new JTextField[100];

    // End of variables declaration
    private int returnStatus = RET_CANCEL;

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    private GuideModel nowModel;

    private String[] id = new String[100];
    private int[] lxPeriod = new int[100];

    //private Integer[] Par1VLNumber = new Integer[100];
    /** Creates new form ModelGuideDialog1 */
    public ModelGuideDialog32(java.awt.Frame parent, boolean modal, GuideModel guideModel) {

        super(parent, modal);
        nowModel = guideModel;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        int duNum = nowModel.getNumOfDU();
        setResizable(false);
        Queue<DU> duList = nowModel.getDuList();
        int count = 0;
        for(int i=0;i<duNum;i++){
            DU du = duList.remove();
            int parNum = du.getNumOfPar();
            for(int j=0;j<parNum;j++){
                jLabelArray1[count] = new JLabel();
                jTextFieldArray2[count] = new JTextField();
                //jTextFieldArray3[count] = new JTextField();
                jTextFieldArray6[count] = new JTextField();
                count++;
            }
            duList.add(du);
        }
        nowModel.setDuParNum(count);
        buttonGroup1 = new ButtonGroup();
        jButton6 = new JButton();
        jPanel1 = new JPanel();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jSeparator1 = new JSeparator();
        jButtonNextStep = new JButton();
        jButton3 = new JButton();
        jButton4 = new JButton();
        jPanel2 = new JPanel();


        jLabel5 = new JLabel();
        jLabel7 = new JLabel();
        //jLabel8 = new JLabel();
        //jLabel9 = new javax.swing.JLabel();
        //jLabe20 = new javax.swing.JLabel();
        jLabe21 = new JLabel();

        jButton6.setText("添加备注");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("建模向导");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("第六步");

        jLabel2.setText("<html>请设置每个接收端RES分区中的调度周期<html>");

        //jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_guide.png"))); // NOI18N
        //jLabel3.setText(" ");

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
//            jPanel1Layout.setAutoCreateGaps(true);
//            jPanel1Layout.setAutoCreateContainerGaps(true);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 280, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 217, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel2))
                                        .addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                                .addContainerGap())
        );

        jButtonNextStep.setText("下一步");
        jButtonNextStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextStepActionPerformed(evt);
            }
        });

        jButton3.setText("取消");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("上一步");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevStepActionPerformed(evt);
            }
        });

        jLabel5.setText("编号");
        jLabel7.setText("RES_Par_ID");
        //jLabel8.setText("分区中VL数量");
        //jLabel9.setText("分区2中VL数量");
        //jLabe20.setText("分区3中VL数量");
        jLabe21.setText("传输周期");
        //这块一下把十个都设置好吧  然后 这里4-10的响应函数 没调整呢 注意
        //int spmNum = nowModel.getNumOfSPM();
        duList = nowModel.getDuList();
        count = 0;
        for(int i=0;i<duNum;i++){
            DU du = duList.remove();
            String duId = du.getId();
            int parNum = du.getNumOfPar();
            for(int j=0;j<parNum;j++){//每个分区中VL的数量及传输周期
                //jTextFieldArray6[j] = new JTextField();
                jLabelArray1[count].setText("   " + ( count + 1) );
                //jTextFieldArray2[j].setText("SPM"+(i+1)+"_");
                jTextFieldArray2[count].setText(duId+"Par"+ (j+1));
                //jTextFieldArray3[count].setText("1");
                jTextFieldArray6[count].setText("100");
                count++;
            }
            duList.add(du);
        }
        /*Queue<SPM> spmList1 = nowModel.getSpmList();
        for(int i=0; i<num; i++)
        {
            jLabelArray1[i].setText("   "+(i+1));
            // 	jTextFieldArray2[i].setActionCommand("jTextFieldArray2_"+(i));
            jTextFieldArray2[i].setText("SPM"+(i+1)+"_");
            jTextFieldArray2[i].addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    jTextField2_1FocusLost(evt);
                }
            });

            jTextFieldArray3[i].setText("1");
            //jTextFieldArray4[i].setToolTipText("周期：单位ms");

            //jTextFieldArray4[i].setText("1");

            //jTextFieldArray5[i].setText("1");

            SPM spm = spmList1.remove();
            int parNum = spm.getParNum();
            if(parNum == 1){
                //jTextFieldArray4[i].setText("0");
                //jTextFieldArray5[i].setText("0");
                //jTextFieldArray4[i].setEditable(false);
                //jTextFieldArray5[i].setEditable(false);
            }else if(parNum == 2){
                //jTextFieldArray5[i].setText("0");
                //jTextFieldArray5[i].setEditable(false);
            }
            spmList1.add(spm);
        }*/
        /**num表示所有分区的数量*/
        int num = count;

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2Layout.setAutoCreateGaps(true);
        jPanel2Layout.setAutoCreateContainerGaps(true);
        jPanel2.setLayout(jPanel2Layout);
        GroupLayout.ParallelGroup gp1 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gp1.addComponent(jLabel5);
        for(int i=0; i<num; i++)
        {
            gp1.addComponent(jLabelArray1[i]);
        }
//            gp1.addComponent(jLabel1_1);
//            gp1.addComponent(jLabel1_2);
//            gp1.addComponent(jLabel1_3);

        GroupLayout.ParallelGroup gp2 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gp2.addComponent(jLabel7);
        for(int i=0; i<num; i++)
        {
            gp2.addComponent(jTextFieldArray2[i]);
        }
//            gp2.addComponent(jTextField2_1);
//            gp2.addComponent(jTextField2_2);
//            gp2.addComponent(jTextField2_3);

      /*  GroupLayout.ParallelGroup gp3 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gp3.addComponent(jLabel8);
        for(int i=0; i<num; i++)
        {
            gp3.addComponent(jTextFieldArray3[i]);
        }*/

        /*GroupLayout.ParallelGroup gp4 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gp4.addComponent(jLabel9);
        for(int i=0; i<num; i++)
        {
            gp4.addComponent(jTextFieldArray4[i]);
        }*/
//            gp4.addComponent(jTextField4_1,javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE);
//            gp4.addComponent(jTextField4_2,javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE);
//            gp4.addComponent(jTextField4_3,javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE);

       /* GroupLayout.ParallelGroup gp5 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gp5.addComponent(jLabe20);
        for(int i=0; i<num; i++)
        {
            gp5.addComponent(jTextFieldArray5[i]);
        }*/
        GroupLayout.ParallelGroup gp55 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING);
        gp55.addComponent(jLabe21);
        for(int i=0; i<num; i++)
        {
            //jTextFieldArray6[i].setText("100");
            gp55.addComponent(jTextFieldArray6[i]);
        }

        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(gp1).addGap(30).addGroup(gp2).addGap(30).addGroup(gp55));///addGroup(gp3).addGap(30).addGroup(gp55));//.addGroup(gp4).addGap(30).addGroup(gp5).addGap(30).addGroup(gp55));


        GroupLayout.ParallelGroup gp6 = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE);
        gp6.addComponent(jLabel5);
        gp6.addComponent(jLabel7);
        //gp6.addComponent(jLabel8);
        //gp6.addComponent(jLabel9);
        //gp6.addComponent(jLabe20);
        gp6.addComponent(jLabe21);
        GroupLayout.SequentialGroup group = jPanel2Layout.createSequentialGroup().addGroup(gp6);

        for(int i=0; i<num; i++)
        {
            //System.out.println("284 num:" + num);
            GroupLayout.ParallelGroup gpTemp = jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE);
            gpTemp.addComponent(jLabelArray1[i]);
            gpTemp.addComponent(jTextFieldArray2[i]);
            //gpTemp.addComponent(jTextFieldArray3[i]);
            //gpTemp.addComponent(jTextFieldArray4[i]);
            //gpTemp.addComponent(jTextFieldArray5[i]);
            gpTemp.addComponent(jTextFieldArray6[i]);
            group.addGroup(gpTemp);
        }

        jPanel2Layout.setVerticalGroup(group);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(318, Short.MAX_VALUE)
                                .addComponent(jButton4)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonNextStep)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)
                                .addGap(8, 8, 8))
                        .addComponent(jSeparator1, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton3)
                                        .addComponent(jButtonNextStep)
                                        .addComponent(jButton4))
                                .addContainerGap())
        );
        pack();

    }// </editor-fold>


    private void jTextField2_1FocusLost(java.awt.event.FocusEvent evt) {
        // TODO add your handling code here:
        //    	System.out.println(command+"||||||||||||||||||||");//这里原本想 失去焦点 然后判断是否重复  但是因为不知道这个事件是哪个 textField发出来的 所以作罢

    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        doClose(RET_CANCEL);
    }

    private void jButtonPrevStepActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        doClose(RET_CANCEL);
        ModelGuideDialog23 guiDialog1 =  new ModelGuideDialog23(ApplicationSettings.getApplicationView(), true, this.nowModel);
        guiDialog1.pack();
        guiDialog1.setLocationRelativeTo(null);
        guiDialog1.setVisible(true);
    }

    private void jButtonNextStepActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int duNum = nowModel.getNumOfDU();
        int count = 0;
        Queue<DU> duList = nowModel.getDuList();
        for(int i=0;i<duNum;i++){
            DU du = duList.remove();
            int parNum = du.getNumOfPar();
            for(int j=0;j<parNum;j++){
                id[count] = jTextFieldArray2[count].getText().trim();
                if(id[count].equals(""))
                {
                    JOptionPane.showMessageDialog(this, "ID不能为空", "Warning",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }

               /* if(jTextFieldArray3[count].getText().trim().equals(""))
                {
                    JOptionPane.showMessageDialog(this, "参数不能为空", "Warning",
                        JOptionPane.WARNING_MESSAGE);
                    return;
                }
                Par1VLNumber[count] = Integer.parseInt(jTextFieldArray3[count].getText());*/
                lxPeriod[count] = Integer.parseInt(jTextFieldArray6[count].getText().trim());
                count++;
            }
            duList.add(du);
        }

        duList = nowModel.getDuList();
        count = 0;
        for(int i=0;i<duNum;i++){
            DU du = duList.remove();
            ArrayList<Paratition> parList = new ArrayList<Paratition>();
            int parNum = du.getNumOfPar();
            for(int j=0;j<parNum;j++){
                Paratition par = new Paratition();
                par.setParId(id[count]);
                //par.setVLCount(Par1VLNumber[count]);
                par.setLxPeriod(lxPeriod[count]);
                parList.add(par);//SPM中的分区表
                count++;
            }
            du.setParList(parList);
            duList.add(du);
        }

        this.nowModel.setDuList(duList);

        doClose(RET_OK);
    	ModelGuideDialog4 guiDialog =  new ModelGuideDialog4(ApplicationSettings.getApplicationView(), true, this.nowModel);
        guiDialog.pack();
        guiDialog.setLocationRelativeTo(null);
        guiDialog.setVisible(true);
    }
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModelGuideDialog1 dialog = new ModelGuideDialog1(new JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
}
